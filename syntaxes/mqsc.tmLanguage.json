{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MQSeries",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#continuation-block"
		},
		{
			"include": "#value"
		},
		{
			"include": "#keyword"
		}
	],
	"repository": {
		"comment": {
			"patterns": [
				{
					"match": "^\\*.*",
					"name": "comment.line.mqsc"
				},
				{
					"match": "^\\s+\\*.*",
					"name": "invalid.illegal.mqsc"
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"match": "\\$\\w+",
					"name": "variable.other.normal.mqsc"
				},
				{
					"match": "\\${\\w+}",
					"name": "variable.other.bracket.mqsc"
				},
				{
					"match": "%\\w+%",
					"name": "variable.other.percent.mqsc"
				},
				{
					"match": "<\\w+>",
					"name": "variable.other.chevron.mqsc"
				}
			]
		},
		"continuation": {
			"patterns": [
				{
					"match": "([+-])(?:\\s*\\n)",
					"name": "constant.character.escape.single.mqsc"
				}
			]
		},
		"continuation-block": {
			"patterns": [
				{
					"begin": "([+-])(?:\\s*\\n)",
					"beginCaptures": {
						"1": {
							"name": "constant.character.escape.begin.mqsc"
						}
					},
					"end": "([^+-]?)(?:\\s*\\n)",
					"endCaptures": {
						"1": {
							"name": "debug.constant.character.escape.end.mqsc"
						}
					},
					"name": "debug.markup.underline",
					"patterns": [
						{
							"match": "([+-])(?:\\s*\\n)",
							"name": "constant.character.escape.middle.mqsc"
						},
						{
							"include": "#value"
						},
						{
							"include": "#comment"
						}
					]
				}
			]
		},
		"value": {
			"patterns": [
				{
					"begin": "\\(\\s*",
					"end": "\\s*\\)",
					"contentName": "constant.other.color.mqsc",
					"patterns": [
						{
							"include": "#continuation"
						},
						{
							"include": "#string"
						},
						{
							"include": "#variable"
						},
						{
							"include": "$self"
						}
					]
				}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.mqsc"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.mqsc"
						}
					},
					"name": "string.quoted.single.mqsc",
					"patterns": [
						{
							"include": "#continuation"
						},
						{
							"include": "#variable"
						}
					]
				},
				{
					"begin": "\"",
					"end": "\"",
					"name": "invalid.illegal.mqsc"
				}
			]
		},
		"keyword": {
			"patterns": [
				{
					"match": "^\\s*(?i:((ALTER|ALT)\\s*(AUTHINFO|CHANNEL|CHL|COMMINFO|LISTENER|NAMELIST|NL|PROCESS|PRO|QALIAS|QA|QLOCAL|QL|QMGR|QMODEL|QM|QREMOTE|QR|SERVICE|SUB|TOPIC)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((CLEAR)\\s*(QLOCAL|QL|TOPICSTR)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((DEFINE|DEF)\\s*(AUTHINFO|CHANNEL|CHL|COMMINFO|LISTENER|NAMELIST|NL|PROCESS|PRO|QALIAS|QA|QLOCAL|QL|QMODEL|QM|QREMOTE|QR|SERVICE|SUB|TOPIC)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((DELETE)\\s*(AUTHINFO|AUTHREC|CHANNEL|CHL|COMMINFO|LISTENER|NAMELIST|NL|POLICY|POL|PROCESS|PRO|QALIAS|QA|QLOCAL|QL|QMODEL|QM|QREMOTE|QR|SERVICE|SUB|TOPIC)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((DISPLAY|DIS)\\s*(AUTHINFO|AUTHREC|AUTHSERV|CHANNEL|CHL|CHLAUTH|CHSTATUS|CLUSQMGR|COMMINFO|CONN|ENTAUTH|LISTENER|LSSTATUS|NAMELIST|NL|POLICY|POL|PROCESS|PRO|PUBSUB|QALIAS|QA|QCLUSTER|QC|QLOCAL|QL|QMGR|QMODEL|QM|QMSTATUS|QREMOTE|QR|QSTATUS|QS|QUEUE|Q|SBSTATUS|SERVICE|SUB|SVSTATUS|TCLUSTER|TOPIC|TPSTATUS)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:(END|EXIT|QUIT))\\b",
					"name": "keyword.mqsc"
				},
				{
					"match": "^\\s*(?i:((PING)\\s*(CHANNEL|QMGR)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((PURGE)\\s*(CHANNEL)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((REFRESH|REF)\\s*(CLUSTER|QMGR|SECURITY)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((RESET)\\s*(CLUSTER|QMGR|CHANNEL)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((RESOLVE)\\s*(CHANNEL)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((RESUME)\\s*(QMGR)\\s*(CLUSTER|CLUSNL)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						},
						"4": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((SET)\\s*(AUTHREC|CHLAUTH|POLICY)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((START)\\s*(CHANNEL|CHINIT|LISTENER|SERVICE)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((STOP)\\s*(CHANNEL|CONNAUTH|LISTENER|SERVICE)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						}
					}
				},
				{
					"match": "^\\s*(?i:((SUSPEND)\\s*(QMGR)\\s*(CLUSTER|CLUSNL)))\\b",
					"captures": {
						"2": {
							"name": "keyword.mqsc"
						},
						"3": {
							"name": "entity.name.type.mqsc"
						},
						"4": {
							"name": "entity.name.type.mqsc"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.mqsc"
}
